# Discord Bot Management Script# For starting, stopping and managing Discord botparam(    [string]$Action = "help")$BotDir = "c:\Users\xiaoy\Desktop\Discord bot"$PythonExe = "$BotDir\venv\Scripts\python.exe"$BotScript = "$BotDir\bot.py"$TestScript = "$BotDir\test_bot_config.py"function Write-Header {    param([string]$Title)    Write-Host ""    Write-Host "Discord Bot - $Title" -ForegroundColor Cyan    Write-Host ("=" * 50) -ForegroundColor Gray}function Test-BotConfig {    Write-Header "Configuration Test"        if (-not (Test-Path $TestScript)) {        Write-Host "Error: Test script not found: $TestScript" -ForegroundColor Red        return $false    }        try {        Set-Location $BotDir        & $PythonExe $TestScript        return $?    }    catch {        Write-Host "Error: Test execution failed: $_" -ForegroundColor Red        return $false    }}function Start-Bot {    Write-Header "Starting Discord Bot"        Write-Host "Checking bot configuration..." -ForegroundColor Yellow    if (-not (Test-BotConfig)) {        Write-Host "Configuration test failed, please fix errors first" -ForegroundColor Red        return    }        Write-Host "Configuration test passed, starting bot..." -ForegroundColor Green        try {        Set-Location $BotDir        & $PythonExe $BotScript    }    catch {        Write-Host "Bot startup failed: $_" -ForegroundColor Red    }}function Show-Status {    Write-Header "Discord Bot Status"        Write-Host "Bot Directory: $BotDir" -ForegroundColor Blue    Write-Host "Python Executable: $PythonExe" -ForegroundColor Blue    Write-Host "Bot Script: $BotScript" -ForegroundColor Blue        $files = @(        @{Path = $BotScript; Name = "Bot Main Script"},        @{Path = $TestScript; Name = "Test Script"},        @{Path = "$BotDir\.env"; Name = "Environment File"},        @{Path = "$BotDir\requirements.txt"; Name = "Requirements File"}    )        Write-Host "`nFile Check:" -ForegroundColor Yellow    foreach ($file in $files) {        if (Test-Path $file.Path) {            Write-Host "  OK - $($file.Name)" -ForegroundColor Green        } else {            Write-Host "  Missing - $($file.Name)" -ForegroundColor Red        }    }        Write-Host "`nPython Environment:" -ForegroundColor Yellow    if (Test-Path $PythonExe) {        try {            $version = & $PythonExe --version 2>&1            Write-Host "  OK - $version" -ForegroundColor Green        } catch {            Write-Host "  Error - Python execution failed" -ForegroundColor Red        }    } else {        Write-Host "  Error - Python executable not found" -ForegroundColor Red    }}function Show-Help {    Write-Header "Help"        Write-Host "Usage: .\manage_bot.ps1 [action]" -ForegroundColor White    Write-Host ""    Write-Host "Available actions:" -ForegroundColor Yellow    Write-Host "  start      - Start the bot" -ForegroundColor Green    Write-Host "  test       - Test bot configuration" -ForegroundColor Green    Write-Host "  status     - Show bot status" -ForegroundColor Green    Write-Host "  help       - Show this help" -ForegroundColor Green    Write-Host ""    Write-Host "Examples:" -ForegroundColor Yellow    Write-Host "  .\manage_bot.ps1 test" -ForegroundColor Gray    Write-Host "  .\manage_bot.ps1 start" -ForegroundColor Gray}# Main logicswitch ($Action.ToLower()) {    "start" { Start-Bot }    "test" { Test-BotConfig }    "status" { Show-Status }    "help" { Show-Help }    default {         Write-Host "Unknown action: $Action" -ForegroundColor Red        Show-Help     }}